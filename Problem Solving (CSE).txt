Problem Solving (CSE):
https://github.com/razzaksr/PST-Intern-CSE-2025

Structures:
	array, list, set, map, graph, tree
Algorithms:
	sliding window, greedy, divide and conquer, dynamic programming

System Design - Low Level Design:

Complexity: time , space >> O()
Problems/ Use case:

Data			>> 
Operations	>> 


Day 1:
1. Consider the group of deposits done by bank today with numbers and manager wants to find out the least deposit. so assist the manager by providing solution to identify the least deposit.

2. In the given list contains the 10 tax payers of financial year 2024-2025, among the auditor wants to find the first and second highest tax payer. so find the solution to support the auditor.

Day 2:
1. In the super market end of each day finding the raised bills to customer with invoice number, now find the missing invoice of the day.
Example:
Input:
8,10,3,1,4,2,5
Output:
6
Input:
45,91,90,92,46
Output:
47
Input:
0,1,2,4,5,6,7
Output:
3


2. IPL Bowlers stats of every over how many runs he has given to opposite team, now find the maiden overs at the last of his stats.

example:
Input:
20,0,19,5,0,3,10,0,2
Output:
20,19,5,3,10,2,0,0,0

Input:
3,0,0,1,0,5,0,6,0
Output:
3,1,5,6,0,0,0,0,0

3. Assume that your are part of support team in IRCTC app where customers would raise issue and it will be considered priority ticket such as 0, 1 and 2. now today tickets are in the bucket and you need to arrange it by priority
Example:
Input:
2,0,0,1,0,2,0,1
Output:
0,0,0,0,1,1,2,2

Day 3:
1. Find and apply charges of 20 each extra debit more than 3 in last 10 transaction of your account which has credit and debit combination

Example:
Input:
900,1200,5600,120,450,670,100,10000,400,120
Output:
900,1200,5600,120,450,670,100,10000,400,100

2. Given an array nums of positive integers of size N. Find all distinct digits present in nums.
Example 1:
Input: nums = [131, 11, 48]
Output: 1 3 4 8
Explanation: 1, 3, 4, and 8 are only distinct
digits that can be extracted from the numbers
of the array.
Example 2:
Input: nums = [111, 222, 333, 4444, 666]
Output: 1 2 3 4 6
Explanation: 1, 2, 3, 4, and 6 are only distinct
digits that can be extracted from the numbers
of the array.

3. Equilibrium index:
Example:
Input:
-7, 1, 5, 2, -4, 3, 0
Output:
3
Input:
0,-3,5,-4,-2,3,1,0
Output:
0

4. Rotating clock wise and anti clock wise

example:
[111, 222, 333, 4444, 666]
2
clock:
[4444, 666, 111, 222, 333]
anticlock:
[333, 4444, 666, 111, 222]


Day 4:
1. Given an array arr[] of positive integers. Your task is to sort them so that the first part of the array contains odd numbers sorted in descending order, and the rest of the portion contains even numbers sorted in ascending order.
Examples:
Input: arr[] = [1, 2, 3, 5, 4, 7, 10]
Output: [7, 5, 3, 1, 2, 4, 10]
Explanation: 7 5 3 1 are odds in descending order and 2 4 10 are evens in ascending order.
Input: arr[] = [0, 4, 5, 3, 7, 2, 1]
Output: [7, 5, 3, 1, 0, 2, 4]
Explanation: 7 5 3 1 are odds in descending order and 0 2 4 are evens in ascending order.

2. Assume that grocery shop generating bills with different amount, now the shopkeeper wants to cumulate the bills. so help him to find total revenue by using recursion
Example:
Input:
[900,20,450,210,60]
Output:
1640

3. Find Max in array using recursion
Example:
Input: 0, 4, 5, 3, 7, 2, 1
Output: 7

4. Find Factorial using recursion
Example:
Input: 5 
Output: 120

5. Find Occurrence of number in array using recursion
Example: 
Input: 0, 1, 5, 0, 7, 2, 1
Output: 1 >> 2 times, 0 >> 2 times
